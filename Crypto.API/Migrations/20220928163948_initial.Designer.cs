// <auto-generated />
using System;
using Crypto.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Crypto.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220928163948_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Crypto.API.Models.CoinNames", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("CoinName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coinid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CoinNames");
                });

            modelBuilder.Entity("Crypto.API.Models.CoinsHodle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PortfolioID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("coinID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioID");

                    b.ToTable("CoinsHodle");
                });

            modelBuilder.Entity("Crypto.API.Models.Portfolio", b =>
                {
                    b.Property<string>("PortfolioID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PortfolioName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PortfolioID");

                    b.HasIndex("UserId");

                    b.ToTable("Portfolio");
                });

            modelBuilder.Entity("Crypto.API.Models.PriceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PriceUSD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("coinid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("priceBTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("priceETH")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PriceHistory");
                });

            modelBuilder.Entity("Crypto.API.Models.Transactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("AmountBuy")
                        .HasColumnType("float");

                    b.Property<double>("AmountSell")
                        .HasColumnType("float");

                    b.Property<string>("Coinid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CoinsHodleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("priceWhenBoughtSold")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CoinsHodleId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Crypto.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Crypto.API.Models.CoinsHodle", b =>
                {
                    b.HasOne("Crypto.API.Models.Portfolio", "Portfolio")
                        .WithMany("coinsHodle")
                        .HasForeignKey("PortfolioID");

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("Crypto.API.Models.Portfolio", b =>
                {
                    b.HasOne("Crypto.API.Models.User", "User")
                        .WithMany("Portfolio")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Crypto.API.Models.Transactions", b =>
                {
                    b.HasOne("Crypto.API.Models.CoinsHodle", "CoinsHodle")
                        .WithMany("Transactions")
                        .HasForeignKey("CoinsHodleId");

                    b.Navigation("CoinsHodle");
                });

            modelBuilder.Entity("Crypto.API.Models.CoinsHodle", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Crypto.API.Models.Portfolio", b =>
                {
                    b.Navigation("coinsHodle");
                });

            modelBuilder.Entity("Crypto.API.Models.User", b =>
                {
                    b.Navigation("Portfolio");
                });
#pragma warning restore 612, 618
        }
    }
}
